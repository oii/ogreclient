; vim: set ft=jinja:
;################################################
; Supervisord config for ogreserver
;  - gunicorn python webserver
;  - celeryd async task queue
;################################################

[program:gunicorn]
directory=/srv/ogre
command=/home/{{ app_user }}/.virtualenvs/ogreserver/bin/gunicorn ogreserver.runflask:app -c /etc/gunicorn.d/ogreserver.conf.py
environment=PATH="/home/{{ app_user }}/.virtualenvs/ogreserver/bin"
user={{ app_user }}
autostart=true
autorestart=true
{% if grains['env'] == 'prod' %}
stdout_logfile=syslog
{% else %}
stdout_logfile=/var/log/ogreserver/gunicorn.log
{% endif %}
redirect_stderr=true

{% if purge %}
{% set purge = "--purge" %}
{% else %}
{% set purge = "" %}
{% endif %}

{% for worker_name, concurrency in workers.iteritems() %}
[program:celeryd.{{ worker_name }}]
directory=/srv/ogre
command=/home/{{ app_user }}/.virtualenvs/ogreserver/bin/celery worker --app=ogreserver.runcelery:celery -n {{ worker_name }}.worker -Q {{ worker_name }} -l {{ loglevel }} {{ purge }} {% if concurrency > 0 %}-c {{ concurrency }}{% endif %} --pidfile /tmp/ogreserver-celeryd-worker-{{ worker_name }}.pid --workdir=/srv/ogre
environment=PATH="/home/{{ app_user }}/.virtualenvs/ogreserver/bin"
user={{ app_user }}
autostart=true
autorestart=true
{% if grains['env'] == 'prod' %}
stdout_logfile=syslog
{% else %}
stdout_logfile=/var/log/ogreserver/celeryd-worker-{{ worker_name }}.log
{% endif %}
redirect_stderr=true
{% endfor %}

[program:celerybeat]
directory=/srv/ogre
command=/home/{{ app_user }}/.virtualenvs/ogreserver/bin/celery beat --app=ogreserver.runcelery:celery --schedule=/var/celerybeat/schedule
environment=PATH="/home/{{ app_user }}/.virtualenvs/ogreserver/bin"
user={{ app_user }}
autostart=true
autorestart=true
{% if grains['env'] == 'prod' %}
stdout_logfile=syslog
{% else %}
stdout_logfile=/var/log/ogreserver/celerybeat.log
{% endif %}
redirect_stderr=true
priority=998


[group:ogreserver]
programs=gunicorn,{% for worker_name in workers %}celeryd.{{ worker_name }},{% endfor %}celerybeat
