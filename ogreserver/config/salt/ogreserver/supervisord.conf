; vim: set ft=jinja:
;################################################
; Supervisord config for ogreserver
;  - gunicorn python webserver
;  - celeryd async task queue
;################################################

[program:gunicorn]
directory=/srv/ogre
command=/home/{{ app_user }}/.virtualenvs/ogreserver/bin/gunicorn ogreserver.runflask:app -c /etc/gunicorn.d/ogreserver.conf.py
environment=PATH="/home/{{ app_user }}/.virtualenvs/ogreserver/bin"
user={{ app_user }}
autostart=true
autorestart=true
{% if grains['env'] == 'prod' %}
stdout_logfile=syslog
{% else %}
stdout_logfile=/var/log/ogreserver/gunicorn.log
{% endif %}
redirect_stderr=true

{% if purge %}
{% set purge = "--purge" %}
{% else %}
{% set purge = "" %}
{% endif %}

[program:celeryd.general]
directory=/srv/ogre
command=/home/{{ app_user }}/.virtualenvs/ogreserver/bin/celery worker --app=ogreserver.runcelery:celery -n ogreserver.worker -Q ogreserver -l {{ loglevel }} {{ purge }} --pidfile /tmp/celeryd-ogreserver-1.pid --workdir=/srv/ogre
environment=PATH="/home/{{ app_user }}/.virtualenvs/ogreserver/bin"
user={{ app_user }}
autostart=true
autorestart=true
{% if grains['env'] == 'prod' %}
stdout_logfile=syslog
{% else %}
stdout_logfile=/var/log/ogreserver/celeryd-general.log
{% endif %}
redirect_stderr=true

[program:celeryd.conversion]
directory=/srv/ogre
command=/home/{{ app_user }}/.virtualenvs/ogreserver/bin/celery worker --app=ogreserver.runcelery:celery -n conversion.worker -Q conversion --concurrency 1 -l {{ loglevel }} {{ purge }} --pidfile /tmp/celeryd-ogreserver-2.pid --workdir=/srv/ogre
environment=PATH="/home/{{ app_user }}/.virtualenvs/ogreserver/bin:/usr/local/bin:/usr/local/sbin:/usr/local/share/python:/usr/local/bin:/usr/bin:/bin"
user={{ app_user }}
autostart=true
autorestart=true
{% if grains['env'] == 'prod' %}
stdout_logfile=syslog
{% else %}
stdout_logfile=/var/log/ogreserver/celeryd-conversion.log
{% endif %}
redirect_stderr=true

[program:celerybeat]
directory=/srv/ogre
command=/home/{{ app_user }}/.virtualenvs/ogreserver/bin/celery beat --app=ogreserver.runcelery:celery --schedule=/var/celerybeat/schedule
environment=PATH="/home/{{ app_user }}/.virtualenvs/ogreserver/bin"
user={{ app_user }}
autostart=true
autorestart=true
{% if grains['env'] == 'prod' %}
stdout_logfile=syslog
{% else %}
stdout_logfile=/var/log/ogreserver/celerybeat.log
{% endif %}
redirect_stderr=true
priority=998


[group:ogreserver]
programs=gunicorn,celeryd.general,celeryd.conversion,celerybeat
